* {
  font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji",
    "Segoe UI Symbol" !important;
}

.alert-absolute {
  position: absolute;
  z-index: 1;
  max-width: 500px;
  margin: -50px -0.25rem 0 -0.25rem;
}

.display-block {
  display: block !important;
}

body {
  background-color: var(--nb-background-color);
  color: var(--sl-color-neutral-950);
}

a {
  color: var(--sl-color-primary-700);
}

p {
  margin: 0;
}

.greyscale {
  filter: grayscale(0.5);
  opacity: 0.5;
}

:root[data-bs-theme="dark"] {
  .greyscale {
    filter: grayscale(0.5);
    opacity: 0.75;
  }

  .table-hover > tbody > tr:hover {
    background-color: #1a1d20;
    cursor: pointer;
  }
}

.table-hover > tbody > tr:hover {
  background-color: #ced4da;
  cursor: pointer;
}

.dropdown-nb {
  user-select: none;
}

.time-list {
  display: inline-block;
  list-style-type: none;
}

.time {
  display: block;
}

.nb-row {
  display: flex;
  flex-direction: column;
  gap: 24px;
}

.nb-row-sm {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

sl-card {
  width: 100%;
}

sl-dialog[open] {
  position: fixed;
  z-index: 9999;
}

sl-dialog:not([open]) {
  display: none;
}

:host,
:root {
  .button--medium {
    --sl-button-font-size-medium: var(--sl-font-size-medium);
  }
}

.background-preview {
  border: 2px solid var(--sl-color-neutral-1000);
  width: 100px;
  height: 100px;
}

.archive-grid {
  display: grid;
  column-gap: var(--sl-spacing-small);
  row-gap: var(--sl-spacing-small);
  grid-template-columns: 1fr;
}

@media (min-width: 768px) {
  .archive-grid {
    grid-template-columns: repeat(2, 342px);
  }
}

@media (min-width: 992px) {
  .archive-grid {
    grid-template-columns: repeat(3, 304px);
  }
}

@media (min-width: 1200px) {
  .archive-grid {
    grid-template-columns: repeat(3, 364px);
  }
}

@media (min-width: 1400px) {
  .archive-grid {
    grid-template-columns: repeat(4, 315px);
  }
}

.cursor-pointer {
  cursor: pointer;
}

.width-fit-content {
  width: fit-content;
}

:not(:defined) {
  visibility: hidden;
  opacity: 0;
}

:defined {
  opacity: 1;
  transition: 0.2s opacity;
}

.display-inline-grid {
  display: inline-grid;
}
